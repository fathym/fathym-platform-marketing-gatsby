// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hVrCe6QR8zQ6ffGdoxKcVS
// Component: DmmpgIxUem9eKV

import * as React from "react";

import {
  Link,
  GatsbyLinkProps as LinkProps,
  navigate as __gatsbyNavigate
} from "gatsby";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: D9uunrQkdXFQl-/component

import "@plasmicapp/react-web/lib/plasmic.css";

import * as plasmic_new_habistack_com_css from "../new_habistack_com/plasmic_new_habistack_com.module.css"; // plasmic-import: rcEGNgTfxT6W6gDjnxsJgN/projectcss
import * as plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import * as plasmic_habistack_marketing_css from "../habistack_marketing/plasmic_habistack_marketing.module.css"; // plasmic-import: cEHjHBABazmDxgQhPGAjL/projectcss
import * as plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import * as projectcss from "./plasmic_v_2_fathym_platform_marketing.module.css"; // plasmic-import: hVrCe6QR8zQ6ffGdoxKcVS/projectcss
import * as sty from "./PlasmicTechnology.module.css"; // plasmic-import: DmmpgIxUem9eKV/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: GUOtKPWmDowxLy/icon
import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: eN0P76-AqjUE47/icon
import microsoftTeamsImage22PngElmPbZzuEf6RG from "./images/microsoftTeamsImage22Png.png"; // plasmic-import: ElmPbZzuEF6R-G/picture
import microsoftTeamsImage21PngNh2FyQwt1R5Frf from "./images/microsoftTeamsImage21Png.png"; // plasmic-import: Nh2fyQWT1R5frf/picture
import multiDatapngL6OySxzWgIv0Hj from "./images/multiDatapng.png"; // plasmic-import: L6oySXZWgIv0HJ/picture
import cloudNativepngAnU9Jx7McSo91 from "./images/cloudNativepng.png"; // plasmic-import: AN-U9jx7McSo91/picture
import microsoftTeamsImage17PngZlGfCfs2I3LiJ from "./images/microsoftTeamsImage17Png.png"; // plasmic-import: zlGfCfs2I3-liJ/picture
import microsoftTeamsImage23PngCLdTmLk8YzlVF from "./images/microsoftTeamsImage23Png.png"; // plasmic-import: CLdTmLk8Yzl_vF/picture
import microsoftTeamsImage18PngZemRKaDke03H8I from "./images/microsoftTeamsImage18Png.png"; // plasmic-import: zemRKaDKE03H8i/picture
import oursYourspngQkXnfLLiJ4UU0Y from "./images/oursYourspng.png"; // plasmic-import: QkXnfLLiJ4uU0y/picture
import microsoftTeamsImage19PngTRYuViFwFwURte from "./images/microsoftTeamsImage19Png.png"; // plasmic-import: tRYuVIFwFwURte/picture

export type PlasmicTechnology__VariantMembers = {};
export type PlasmicTechnology__VariantsArgs = {};
type VariantPropType = keyof PlasmicTechnology__VariantsArgs;
export const PlasmicTechnology__VariantProps = new Array<VariantPropType>();

export type PlasmicTechnology__ArgsType = {};
type ArgPropType = keyof PlasmicTechnology__ArgsType;
export const PlasmicTechnology__ArgProps = new Array<ArgPropType>();

export type PlasmicTechnology__OverridesType = {
  root?: p.Flex<"section">;
  h2?: p.Flex<"h2">;
};

export interface DefaultTechnologyProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicTechnology__RenderFunc(props: {
  variants: PlasmicTechnology__VariantsArgs;
  args: PlasmicTechnology__ArgsType;
  overrides: PlasmicTechnology__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_new_habistack_com_css.plasmic_tokens,
        plasmic_library_plasmic_color_type_css.plasmic_tokens,
        plasmic_habistack_marketing_css.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.column___523B)}>
        <h2
          data-plasmic-name={"h2"}
          data-plasmic-override={overrides.h2}
          className={classNames(
            projectcss.all,
            projectcss.h2,
            projectcss.__wab_text,
            sty.h2
          )}
        >
          {
            "Deploying applications to an enterprise-ready Azure environment has never been easier. "
          }
        </h2>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__eEWl5
          )}
        >
          <React.Fragment>
            <span
              className={"plasmic_default__all plasmic_default__span"}
              style={{ color: "#0091FF", fontWeight: 700 }}
            >
              {
                "Spend more time coding and testing than provisioning and deploying. "
              }
            </span>
            <React.Fragment>{"\n\n"}</React.Fragment>
            <span
              className={"plasmic_default__all plasmic_default__span"}
              style={{ fontWeight: 700 }}
            >
              {"Fathym gives you a best practice, cloud-native workflow for"}
            </span>
            <React.Fragment> </React.Fragment>
            <span
              className={"plasmic_default__all plasmic_default__span"}
              style={{ fontWeight: 700, color: "#0091FF" }}
            >
              {"rapid "}
            </span>
            <React.Fragment>{""}</React.Fragment>
            <span
              className={"plasmic_default__all plasmic_default__span"}
              style={{ color: "#0091FF", fontWeight: 700 }}
            >
              {"application"}
            </span>
            <React.Fragment>{""}</React.Fragment>
            <span
              className={"plasmic_default__all plasmic_default__span"}
              style={{ fontWeight: 700, color: "#0091FF" }}
            >
              {" development, testing and release"}
            </span>
            <React.Fragment>{". "}</React.Fragment>
          </React.Fragment>
        </div>
        <div className={classNames(projectcss.all, sty.columns__vTyVw)}>
          <div className={classNames(projectcss.all, sty.column__mu7DC)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__gbOgI)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: microsoftTeamsImage22PngElmPbZzuEf6RG,
                fullWidth: 3542,
                fullHeight: 1563,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__fsoV3)}>
              <div className={classNames(projectcss.all, sty.column___0GBh6)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__qQoWd
                  )}
                >
                  {"Composable Application Development "}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4RwwI
                  )}
                >
                  {"Future-proof"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__e0K3
                  )}
                >
                  {
                    "Develop composable applications with modular frontends and microservices for agile and scalable application delivery. "
                  }
                </div>
                {true ? (
                  <Button
                    className={classNames("__wab_instance", sty.button__bi5DI)}
                    color={"softBlue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg___7IpnS)}
                        role={"img"}
                      />
                    }
                    shape={"rounded" as const}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__inuVc
                      )}
                    >
                      {"READ MORE"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__w8ZNi)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__vzJo3)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: microsoftTeamsImage21PngNh2FyQwt1R5Frf,
                fullWidth: 3542,
                fullHeight: 1563,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__vTPgk)}>
              <div className={classNames(projectcss.all, sty.column__gLuRk)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__xbpV0
                  )}
                >
                  {"Built-In CI/CD "}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y97A6
                  )}
                >
                  {"Out-of-the-box"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__saoo6
                  )}
                >
                  {
                    "Automated build pipelines and source controls for no-code, hassle-free deployments. "
                  }
                </div>
                {true ? (
                  <Button
                    className={classNames("__wab_instance", sty.button___8GiPu)}
                    color={"softBlue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__kkXs0)}
                        role={"img"}
                      />
                    }
                    shape={"rounded" as const}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uUbu
                      )}
                    >
                      {"READ MORE"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column___8FJo)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__fJdYy)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: multiDatapngL6OySxzWgIv0Hj,
                fullWidth: 850,
                fullHeight: 375,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__ocpgo)}>
              <div className={classNames(projectcss.all, sty.column__lJlIm)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__by8Du
                  )}
                >
                  {"Application Governance  "}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__j7Yu3
                  )}
                >
                  {"Easily version and spin off new apps"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hTZir
                  )}
                >
                  {
                    "Consolidated control panel for hosting and managing your application portfolio."
                  }
                </div>
                {true ? (
                  <Button
                    className={classNames("__wab_instance", sty.button__b83Kf)}
                    color={"softBlue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__cvcuo)}
                        role={"img"}
                      />
                    }
                    shape={"rounded" as const}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qrLzd
                      )}
                    >
                      {"READ MORE"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </div>
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.columns__vMigW)}>
          <div className={classNames(projectcss.all, sty.column___2XftQ)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__w8Gh)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: cloudNativepngAnU9Jx7McSo91,
                fullWidth: 850,
                fullHeight: 375,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__ebVok)}>
              <div className={classNames(projectcss.all, sty.column__xBgHv)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__wciSi
                  )}
                >
                  {"Best Practice Cloud Infrastructure "}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__l7QM2
                  )}
                >
                  {"Azure cloud"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wmrUj
                  )}
                >
                  {
                    "Automated, best practice, cost effective Azure cloud provisioning."
                  }
                </div>
                {true ? (
                  <Button
                    className={classNames("__wab_instance", sty.button__w6Hxt)}
                    color={"softBlue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__nmOq5)}
                        role={"img"}
                      />
                    }
                    shape={"rounded" as const}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iWwC0
                      )}
                    >
                      {"READ MORE"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__cJsOc)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__h8Dhf)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: microsoftTeamsImage17PngZlGfCfs2I3LiJ,
                fullWidth: 3542,
                fullHeight: 1563,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns___6FQEt)}>
              <div className={classNames(projectcss.all, sty.column__xXzB3)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__worjc
                  )}
                >
                  {"Our Cloud or Yours "}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3J5H
                  )}
                >
                  {"SaaS or Licensed"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bZDv
                  )}
                >
                  {
                    "Get started hassle-free in our SaaS cloud. Scale to a cloud hosted in your own Azure tenant for maximum control. "
                  }
                </div>
                {true ? (
                  <Button
                    className={classNames("__wab_instance", sty.button__ujrs)}
                    color={"softBlue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg___4DonO)}
                        role={"img"}
                      />
                    }
                    shape={"rounded" as const}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2Lyhm
                      )}
                    >
                      {"READ MORE"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__qTiBc)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__krlBs)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: microsoftTeamsImage23PngCLdTmLk8YzlVF,
                fullWidth: 3542,
                fullHeight: 1563,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__hsOxi)}>
              <div className={classNames(projectcss.all, sty.column__gF1Sg)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__afMuK
                  )}
                >
                  {"Identity Management "}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kHgoi
                  )}
                >
                  {"Custom SSO"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fHXmj
                  )}
                >
                  {
                    "Authenticate users across your applications. Set up custom single sign-on (SSO)."
                  }
                </div>
                {true ? (
                  <Button
                    className={classNames("__wab_instance", sty.button___41SkL)}
                    color={"softBlue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__qiftr)}
                        role={"img"}
                      />
                    }
                    shape={"rounded" as const}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__j8G8H
                      )}
                    >
                      {"READ MORE"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </div>
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.columns__s4Fo)}>
          <div className={classNames(projectcss.all, sty.column__oNVk)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__uaNt4)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: microsoftTeamsImage18PngZemRKaDke03H8I,
                fullWidth: 3542,
                fullHeight: 1563,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__u8Aze)}>
              <div className={classNames(projectcss.all, sty.column___9MuBx)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__dJm6T
                  )}
                >
                  {"Continuous Test and Release "}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2Ifpe
                  )}
                >
                  {"Streamlined UI"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xqHKw
                  )}
                >
                  {
                    "Accelerate development cycles. Fathym enables non-developers to easily test updates and ship to production when ready. "
                  }
                </div>
                {true ? (
                  <Button
                    className={classNames("__wab_instance", sty.button__gbOl8)}
                    color={"softBlue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__rSVdy)}
                        role={"img"}
                      />
                    }
                    shape={"rounded" as const}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__olhVf
                      )}
                    >
                      {"READ MORE"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__x22F3)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__vf4R)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: oursYourspngQkXnfLLiJ4UU0Y,
                fullWidth: 850,
                fullHeight: 375,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__bOv)}>
              <div className={classNames(projectcss.all, sty.column___3JIwc)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__unYj2
                  )}
                >
                  {"Enterprise-Ready Security "}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sFt2C
                  )}
                >
                  {"Secure your IP"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__arh8F
                  )}
                >
                  {
                    "Take advantage of Azure’s advanced security features. Secure your data ownership and intellectual property in your own Azure tenant."
                  }
                </div>
                {true ? (
                  <Button
                    className={classNames("__wab_instance", sty.button__h1XeA)}
                    color={"softBlue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__ryrLf)}
                        role={"img"}
                      />
                    }
                    shape={"rounded" as const}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lQt4Y
                      )}
                    >
                      {"READ MORE"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__fJbiR)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__sfHyk)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: microsoftTeamsImage19PngTRYuViFwFwURte,
                fullWidth: 3542,
                fullHeight: 1563,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__oKpk)}>
              <div className={classNames(projectcss.all, sty.column__dFhK3)}>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__hzMgC
                  )}
                >
                  {"Custom Workflows "}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9RfTz
                  )}
                >
                  {"Extensible"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wMNrJ
                  )}
                >
                  {
                    "Fathym not only offers simplified workflows for releasing your applications to the cloud but gives you the ability to create your own custom workflows to accelerate your team. "
                  }
                </div>
                {true ? (
                  <Button
                    className={classNames("__wab_instance", sty.button___9MqqG)}
                    color={"softBlue" as const}
                    endIcon={
                      <ArrowRightsvgIcon
                        className={classNames(projectcss.all, sty.svg__kgdIy)}
                        role={"img"}
                      />
                    }
                    shape={"rounded" as const}
                    showEndIcon={true}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2Gb6W
                      )}
                    >
                      {"READ MORE"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "h2"],
  h2: ["h2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "section";
  h2: "h2";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTechnology__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTechnology__VariantsArgs;
    args?: PlasmicTechnology__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicTechnology__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicTechnology__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicTechnology__ArgProps,
          internalVariantPropNames: PlasmicTechnology__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTechnology__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicTechnology";
  } else {
    func.displayName = `PlasmicTechnology.${nodeName}`;
  }
  return func;
}

export const PlasmicTechnology = Object.assign(
  // Top-level PlasmicTechnology renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h2: makeNodeComponent("h2"),

    // Metadata about props expected for PlasmicTechnology
    internalVariantProps: PlasmicTechnology__VariantProps,
    internalArgProps: PlasmicTechnology__ArgProps
  }
);

export default PlasmicTechnology;
/* prettier-ignore-end */
