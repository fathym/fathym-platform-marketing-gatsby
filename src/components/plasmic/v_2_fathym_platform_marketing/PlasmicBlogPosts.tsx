// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: hVrCe6QR8zQ6ffGdoxKcVS
// Component: KozXwlk9h81UEI

import * as React from "react";

import {
  Link,
  GatsbyLinkProps as LinkProps,
  navigate as __gatsbyNavigate
} from "gatsby";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: D9uunrQkdXFQl-/component

import "@plasmicapp/react-web/lib/plasmic.css";

import * as plasmic_new_habistack_com_css from "../new_habistack_com/plasmic_new_habistack_com.module.css"; // plasmic-import: rcEGNgTfxT6W6gDjnxsJgN/projectcss
import * as plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import * as plasmic_habistack_marketing_css from "../habistack_marketing/plasmic_habistack_marketing.module.css"; // plasmic-import: cEHjHBABazmDxgQhPGAjL/projectcss
import * as plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import * as projectcss from "./plasmic_v_2_fathym_platform_marketing.module.css"; // plasmic-import: hVrCe6QR8zQ6ffGdoxKcVS/projectcss
import * as sty from "./PlasmicBlogPosts.module.css"; // plasmic-import: KozXwlk9h81UEI/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: GUOtKPWmDowxLy/icon
import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: eN0P76-AqjUE47/icon
import fakurianDesignPPTwRTkvXqUnsplashjpgO3WVcaoQcS8Qv from "./images/fakurianDesignPPTwRTkvXqUnsplashjpg.jpg"; // plasmic-import: o3w-VcaoQcS8QV/picture
import fakurianDesignLfbhDph3QYUnsplashjpgRyCkEbUyUcQpQ from "./images/fakurianDesignLfbhDph3QYUnsplashjpg.jpg"; // plasmic-import: ryCkEbUy_UcQpQ/picture
import blog2390X290JpgZRc0JtG0KE1WNn from "./images/blog2390X290Jpg.jpg"; // plasmic-import: ZRc0jtG0kE1wNn/picture

export type PlasmicBlogPosts__VariantMembers = {};
export type PlasmicBlogPosts__VariantsArgs = {};
type VariantPropType = keyof PlasmicBlogPosts__VariantsArgs;
export const PlasmicBlogPosts__VariantProps = new Array<VariantPropType>();

export type PlasmicBlogPosts__ArgsType = {};
type ArgPropType = keyof PlasmicBlogPosts__ArgsType;
export const PlasmicBlogPosts__ArgProps = new Array<ArgPropType>();

export type PlasmicBlogPosts__OverridesType = {
  root?: p.Flex<"section">;
  h2?: p.Flex<"h2">;
};

export interface DefaultBlogPostsProps {
  className?: string;
}

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());
const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicBlogPosts__RenderFunc(props: {
  variants: PlasmicBlogPosts__VariantsArgs;
  args: PlasmicBlogPosts__ArgsType;
  overrides: PlasmicBlogPosts__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});

  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_new_habistack_com_css.plasmic_tokens,
        plasmic_library_plasmic_color_type_css.plasmic_tokens,
        plasmic_habistack_marketing_css.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.column__fUszk)}>
        <h2
          data-plasmic-name={"h2"}
          data-plasmic-override={overrides.h2}
          className={classNames(
            projectcss.all,
            projectcss.h2,
            projectcss.__wab_text,
            sty.h2
          )}
        >
          {"Blog Posts"}
        </h2>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__jcqPl
          )}
        >
          {"Information about geoinformation"}
        </div>
        <div className={classNames(projectcss.all, sty.columns__gKrj4)}>
          <div className={classNames(projectcss.all, sty.column__fwrw8)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__c4Hne)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: fakurianDesignPPTwRTkvXqUnsplashjpgO3WVcaoQcS8Qv,
                fullWidth: 1920,
                fullHeight: 1280,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__xUnoP)}>
              <div className={classNames(projectcss.all, sty.column__cxE02)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bhLub
                  )}
                >
                  {"September 03, 2022"}
                </div>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__i340
                  )}
                >
                  {"The Future of Geoinformation Data"}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__idId
                  )}
                >
                  {
                    "When you have to upgrade your cloud to make sure your customers are getting the data the need at the rate they need...\n"
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button___6F4Dw)}
                  color={"softBlue" as const}
                  endIcon={
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__avT0R)}
                      role={"img"}
                    />
                  }
                  shape={"rounded" as const}
                  showEndIcon={true}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gjDHg
                    )}
                  >
                    {"READ MORE"}
                  </div>
                </Button>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__yAmeR)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__iyC9V)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: fakurianDesignLfbhDph3QYUnsplashjpgRyCkEbUyUcQpQ,
                fullWidth: 1920,
                fullHeight: 1080,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__smJeR)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__hAc7U)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aPtvA
                  )}
                >
                  {"September 09, 2022"}
                </div>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__sYY3
                  )}
                >
                  {"Predictive IoT using Weather Forcasts"}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tnO1
                  )}
                >
                  {
                    "We built a flexible machine learning cloud native architecture that can use a wide variety of historical data to predict the future."
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__gaFKa)}
                  color={"softBlue" as const}
                  endIcon={
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__xQbQx)}
                      role={"img"}
                    />
                  }
                  shape={"rounded" as const}
                  showEndIcon={true}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qyViF
                    )}
                  >
                    {"READ MORE"}
                  </div>
                </Button>
              </p.Stack>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__mO2AJ)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__oVflR)}
              displayHeight={"230px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: blog2390X290JpgZRc0JtG0KE1WNn,
                fullWidth: 390,
                fullHeight: 290,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__hx5Su)}>
              <div className={classNames(projectcss.all, sty.column__rjK8K)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fHf9Y
                  )}
                >
                  {"September 12, 2022"}
                </div>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__lMj1P
                  )}
                >
                  {"Announcing Templated Geoinformation Apps"}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__q3Kvv
                  )}
                >
                  {
                    "Free application templates provide a starting point for building bespoke solutions to answer any problem.\n"
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__dyYzK)}
                  color={"softBlue" as const}
                  endIcon={
                    <ArrowRightsvgIcon
                      className={classNames(projectcss.all, sty.svg__pY4LK)}
                      role={"img"}
                    />
                  }
                  shape={"rounded" as const}
                  showEndIcon={true}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ypuU6
                    )}
                  >
                    {"READ MORE"}
                  </div>
                </Button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "h2"],
  h2: ["h2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "section";
  h2: "h2";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBlogPosts__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBlogPosts__VariantsArgs;
    args?: PlasmicBlogPosts__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBlogPosts__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicBlogPosts__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicBlogPosts__ArgProps,
          internalVariantPropNames: PlasmicBlogPosts__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBlogPosts__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBlogPosts";
  } else {
    func.displayName = `PlasmicBlogPosts.${nodeName}`;
  }
  return func;
}

export const PlasmicBlogPosts = Object.assign(
  // Top-level PlasmicBlogPosts renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h2: makeNodeComponent("h2"),

    // Metadata about props expected for PlasmicBlogPosts
    internalVariantProps: PlasmicBlogPosts__VariantProps,
    internalArgProps: PlasmicBlogPosts__ArgProps
  }
);

export default PlasmicBlogPosts;
/* prettier-ignore-end */
